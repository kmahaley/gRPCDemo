// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: book.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Org.Example.NMVnext.Sevices {
  /// <summary>
  /// The java service definition. Will behave as NM calling API
  /// </summary>
  public static partial class NMAPIBookService
  {
    static readonly string __ServiceName = "example.NMAPIBookService";

    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.Book> __Marshaller_example_Book = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.Book.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.IntegerMessageType> __Marshaller_example_IntegerMessageType = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.IntegerMessageType.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.VoidMessageType> __Marshaller_example_VoidMessageType = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.VoidMessageType.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.BookPacket> __Marshaller_example_BookPacket = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.BookPacket.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.PutMessageType> __Marshaller_example_PutMessageType = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.PutMessageType.Parser.ParseFrom);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.Book, global::Org.Example.NMVnext.Sevices.Book> __Method_AddBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.Book, global::Org.Example.NMVnext.Sevices.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddBook",
        __Marshaller_example_Book,
        __Marshaller_example_Book);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.Book> __Method_GetBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBook",
        __Marshaller_example_IntegerMessageType,
        __Marshaller_example_Book);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.VoidMessageType, global::Org.Example.NMVnext.Sevices.BookPacket> __Method_GetAllBooks = new grpc::Method<global::Org.Example.NMVnext.Sevices.VoidMessageType, global::Org.Example.NMVnext.Sevices.BookPacket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllBooks",
        __Marshaller_example_VoidMessageType,
        __Marshaller_example_BookPacket);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.PutMessageType, global::Org.Example.NMVnext.Sevices.Book> __Method_PutBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.PutMessageType, global::Org.Example.NMVnext.Sevices.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutBook",
        __Marshaller_example_PutMessageType,
        __Marshaller_example_Book);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.VoidMessageType> __Method_DeleteBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.VoidMessageType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBook",
        __Marshaller_example_IntegerMessageType,
        __Marshaller_example_VoidMessageType);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Org.Example.NMVnext.Sevices.BookReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NMAPIBookService</summary>
    [grpc::BindServiceMethod(typeof(NMAPIBookService), "BindService")]
    public abstract partial class NMAPIBookServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.Book> AddBook(global::Org.Example.NMVnext.Sevices.Book request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.Book> GetBook(global::Org.Example.NMVnext.Sevices.IntegerMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.BookPacket> GetAllBooks(global::Org.Example.NMVnext.Sevices.VoidMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.Book> PutBook(global::Org.Example.NMVnext.Sevices.PutMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.VoidMessageType> DeleteBook(global::Org.Example.NMVnext.Sevices.IntegerMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(NMAPIBookServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddBook, serviceImpl.AddBook)
          .AddMethod(__Method_GetBook, serviceImpl.GetBook)
          .AddMethod(__Method_GetAllBooks, serviceImpl.GetAllBooks)
          .AddMethod(__Method_PutBook, serviceImpl.PutBook)
          .AddMethod(__Method_DeleteBook, serviceImpl.DeleteBook).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NMAPIBookServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.Book, global::Org.Example.NMVnext.Sevices.Book>(serviceImpl.AddBook));
      serviceBinder.AddMethod(__Method_GetBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.Book>(serviceImpl.GetBook));
      serviceBinder.AddMethod(__Method_GetAllBooks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.VoidMessageType, global::Org.Example.NMVnext.Sevices.BookPacket>(serviceImpl.GetAllBooks));
      serviceBinder.AddMethod(__Method_PutBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.PutMessageType, global::Org.Example.NMVnext.Sevices.Book>(serviceImpl.PutBook));
      serviceBinder.AddMethod(__Method_DeleteBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.VoidMessageType>(serviceImpl.DeleteBook));
    }

  }
  /// <summary>
  /// The dotnet core service definition. Will behave as C#/Cosmos internal teams calling API
  /// </summary>
  public static partial class PNAPIBookService
  {
    static readonly string __ServiceName = "example.PNAPIBookService";

    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.Book> __Marshaller_example_Book = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.Book.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.IntegerMessageType> __Marshaller_example_IntegerMessageType = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.IntegerMessageType.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.VoidMessageType> __Marshaller_example_VoidMessageType = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.VoidMessageType.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.BookPacket> __Marshaller_example_BookPacket = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.BookPacket.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Org.Example.NMVnext.Sevices.PutMessageType> __Marshaller_example_PutMessageType = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Org.Example.NMVnext.Sevices.PutMessageType.Parser.ParseFrom);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.Book, global::Org.Example.NMVnext.Sevices.Book> __Method_PNAddBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.Book, global::Org.Example.NMVnext.Sevices.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PNAddBook",
        __Marshaller_example_Book,
        __Marshaller_example_Book);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.Book> __Method_PNGetBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PNGetBook",
        __Marshaller_example_IntegerMessageType,
        __Marshaller_example_Book);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.VoidMessageType, global::Org.Example.NMVnext.Sevices.BookPacket> __Method_PNGetAllBooks = new grpc::Method<global::Org.Example.NMVnext.Sevices.VoidMessageType, global::Org.Example.NMVnext.Sevices.BookPacket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PNGetAllBooks",
        __Marshaller_example_VoidMessageType,
        __Marshaller_example_BookPacket);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.PutMessageType, global::Org.Example.NMVnext.Sevices.Book> __Method_PNPutBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.PutMessageType, global::Org.Example.NMVnext.Sevices.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PNPutBook",
        __Marshaller_example_PutMessageType,
        __Marshaller_example_Book);

    static readonly grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.VoidMessageType> __Method_PNDeleteBook = new grpc::Method<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.VoidMessageType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PNDeleteBook",
        __Marshaller_example_IntegerMessageType,
        __Marshaller_example_VoidMessageType);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Org.Example.NMVnext.Sevices.BookReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of PNAPIBookService</summary>
    [grpc::BindServiceMethod(typeof(PNAPIBookService), "BindService")]
    public abstract partial class PNAPIBookServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.Book> PNAddBook(global::Org.Example.NMVnext.Sevices.Book request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.Book> PNGetBook(global::Org.Example.NMVnext.Sevices.IntegerMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.BookPacket> PNGetAllBooks(global::Org.Example.NMVnext.Sevices.VoidMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.Book> PNPutBook(global::Org.Example.NMVnext.Sevices.PutMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Org.Example.NMVnext.Sevices.VoidMessageType> PNDeleteBook(global::Org.Example.NMVnext.Sevices.IntegerMessageType request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PNAPIBookServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PNAddBook, serviceImpl.PNAddBook)
          .AddMethod(__Method_PNGetBook, serviceImpl.PNGetBook)
          .AddMethod(__Method_PNGetAllBooks, serviceImpl.PNGetAllBooks)
          .AddMethod(__Method_PNPutBook, serviceImpl.PNPutBook)
          .AddMethod(__Method_PNDeleteBook, serviceImpl.PNDeleteBook).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PNAPIBookServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PNAddBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.Book, global::Org.Example.NMVnext.Sevices.Book>(serviceImpl.PNAddBook));
      serviceBinder.AddMethod(__Method_PNGetBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.Book>(serviceImpl.PNGetBook));
      serviceBinder.AddMethod(__Method_PNGetAllBooks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.VoidMessageType, global::Org.Example.NMVnext.Sevices.BookPacket>(serviceImpl.PNGetAllBooks));
      serviceBinder.AddMethod(__Method_PNPutBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.PutMessageType, global::Org.Example.NMVnext.Sevices.Book>(serviceImpl.PNPutBook));
      serviceBinder.AddMethod(__Method_PNDeleteBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Org.Example.NMVnext.Sevices.IntegerMessageType, global::Org.Example.NMVnext.Sevices.VoidMessageType>(serviceImpl.PNDeleteBook));
    }

  }
}
#endregion
